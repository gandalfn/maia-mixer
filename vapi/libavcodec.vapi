namespace AV.Codec
{
    [CCode (cname = "AVCodecID", cprefix = "AV_CODEC_ID_", cheader_filename = "avcodec.h")]
    public enum ID
    {
        NONE,
        MPEG1VIDEO,
        MPEG2VIDEO,
        H261,
        H263,
        RV10,
        RV20,
        MJPEG,
        MJPEGB,
        LJPEG,
        SP5X,
        JPEGLS,
        MPEG4,
        RAWVIDEO,
        MSMPEG4V1,
        MSMPEG4V2,
        MSMPEG4V3,
        WMV1,
        WMV2,
        H263P,
        H263I,
        FLV1,
        SVQ1,
        SVQ3,
        DVVIDEO,
        HUFFYUV,
        CYUV,
        H264,
        INDEO3,
        VP3,
        THEORA,
        ASV1,
        ASV2,
        FFV1,
        4XM,
        VCR1,
        CLJR,
        MDEC,
        ROQ,
        INTERPLAY_VIDEO,
        XAN_WC3,
        XAN_WC4,
        RPZA,
        CINEPAK,
        WS_VQA,
        MSRLE,
        MSVIDEO1,
        IDCIN,
        8BPS,
        SMC,
        FLIC,
        TRUEMOTION1,
        VMDVIDEO,
        MSZH,
        ZLIB,
        QTRLE,
        TSCC,
        ULTI,
        QDRAW,
        VIXL,
        QPEG,
        PNG,
        PPM,
        PBM,
        PGM,
        PGMYUV,
        PAM,
        FFVHUFF,
        RV30,
        RV40,
        VC1,
        WMV3,
        LOCO,
        WNV1,
        AASC,
        INDEO2,
        FRAPS,
        TRUEMOTION2,
        BMP,
        CSCD,
        MMVIDEO,
        ZMBV,
        AVS,
        SMACKVIDEO,
        NUV,
        KMVC,
        FLASHSV,
        CAVS,
        JPEG2000,
        VMNC,
        VP5,
        VP6,
        VP6F,
        TARGA,
        DSICINVIDEO,
        TIERTEXSEQVIDEO,
        TIFF,
        GIF,
        DXA,
        DNXHD,
        THP,
        SGI,
        C93,
        BETHSOFTVID,
        PTX,
        TXD,
        VP6A,
        AMV,
        VB,
        PCX,
        SUNRAST,
        INDEO4,
        INDEO5,
        MIMIC,
        RL2,
        ESCAPE124,
        DIRAC,
        BFI,
        CMV,
        MOTIONPIXELS,
        TGV,
        TGQ,
        TQI,
        AURA,
        AURA2,
        V210X,
        TMV,
        V210,
        DPX,
        MAD,
        FRWU,
        FLASHSV2,
        CDGRAPHICS,
        R210,
        ANM,
        BINKVIDEO,
        IFF_ILBM,
        IFF_BYTERUN1,
        KGV1,
        YOP,
        VP8,
        PICTOR,
        ANSI,
        A64_MULTI,
        A64_MULTI5,
        R10K,
        MXPEG,
        LAGARITH,
        PRORES,
        JV,
        DFA,
        WMV3IMAGE,
        VC1IMAGE,
        UTVIDEO,
        BMV_VIDEO,
        VBLE,
        DXTORY,
        V410,
        XWD,
        CDXL,
        XBM,
        ZEROCODEC,
        MSS1,
        MSA1,
        TSCC2,
        MTS2,
        CLLC,
        MSS2,
        VP9,
        AIC,
        ESCAPE130,
        G2M,
        WEBP,
        HNM4_VIDEO,
        HEVC,
        H265,
        FIC,
        ALIAS_PIX,
        BRENDER_PIX,
        PAF_VIDEO,
        EXR,
        VP7,
        SANM,
        SGIRLE,
        MVC1,
        MVC2,
        HQX,
        TDSC,
        HQ_HQA,
        HAP,
        DDS,
        DXV,
        SCREENPRESSO,
        RSCC,
        Y41P,
        AVRP,
        012V,
        AVUI,
        AYUV,
        TARGA_Y216,
        V308,
        V408,
        YUV4,
        AVRN,
        CPIA,
        XFACE,
        SNOW,
        SMVJPEG,
        APNG,
        DAALA,
        CFHD,
        TRUEMOTION2RT,
        M101,
        MAGICYUV,
        SHEERVIDEO,
        YLC,
        FIRST_AUDIO,
        PCM_S16LE,
        PCM_S16BE,
        PCM_U16LE,
        PCM_U16BE,
        PCM_S8,
        PCM_U8,
        PCM_MULAW,
        PCM_ALAW,
        PCM_S32LE,
        PCM_S32BE,
        PCM_U32LE,
        PCM_U32BE,
        PCM_S24LE,
        PCM_S24BE,
        PCM_U24LE,
        PCM_U24BE,
        PCM_S24DAUD,
        PCM_ZORK,
        PCM_S16LE_PLANAR,
        PCM_DVD,
        PCM_F32BE,
        PCM_F32LE,
        PCM_F64BE,
        PCM_F64LE,
        PCM_BLURAY,
        PCM_LXF,
        S302M,
        PCM_S8_PLANAR,
        PCM_S24LE_PLANAR,
        PCM_S32LE_PLANAR,
        PCM_S16BE_PLANAR,
        ADPCM_IMA_QT,
        ADPCM_IMA_WAV,
        ADPCM_IMA_DK3,
        ADPCM_IMA_DK4,
        ADPCM_IMA_WS,
        ADPCM_IMA_SMJPEG,
        ADPCM_MS,
        ADPCM_4XM,
        ADPCM_XA,
        ADPCM_ADX,
        ADPCM_EA,
        ADPCM_G726,
        ADPCM_CT,
        ADPCM_SWF,
        ADPCM_YAMAHA,
        ADPCM_SBPRO_4,
        ADPCM_SBPRO_3,
        ADPCM_SBPRO_2,
        ADPCM_THP,
        ADPCM_IMA_AMV,
        ADPCM_EA_R1,
        ADPCM_EA_R3,
        ADPCM_EA_R2,
        ADPCM_IMA_EA_SEAD,
        ADPCM_IMA_EA_EACS,
        ADPCM_EA_XAS,
        ADPCM_EA_MAXIS_XA,
        ADPCM_IMA_ISS,
        ADPCM_G722,
        ADPCM_IMA_APC,
        ADPCM_VIMA,
        ADPCM_AFC,
        ADPCM_IMA_OKI,
        ADPCM_DTK,
        ADPCM_IMA_RAD,
        ADPCM_G726LE,
        ADPCM_THP_LE,
        ADPCM_PSX,
        ADPCM_AICA,
        ADPCM_IMA_DAT4,
        ADPCM_MTAF,
        AMR_NB,
        AMR_WB,
        RA_144,
        RA_288,
        ROQ_DPCM,
        INTERPLAY_DPCM,
        XAN_DPCM,
        SOL_DPCM,
        SDX2_DPCM,
        MP2,
        MP3,
        AAC,
        AC3,
        DTS,
        VORBIS,
        DVAUDIO,
        WMAV1,
        WMAV2,
        MACE3,
        MACE6,
        VMDAUDIO,
        FLAC,
        MP3ADU,
        MP3ON4,
        SHORTEN,
        ALAC,
        WESTWOOD_SND1,
        GSM,
        QDM2,
        COOK,
        TRUESPEECH,
        TTA,
        SMACKAUDIO,
        QCELP,
        WAVPACK,
        DSICINAUDIO,
        IMC,
        MUSEPACK7,
        MLP,
        GSM_MS,
        ATRAC3,
        APE,
        NELLYMOSER,
        MUSEPACK8,
        SPEEX,
        WMAVOICE,
        WMAPRO,
        WMALOSSLESS,
        ATRAC3P,
        EAC3,
        SIPR,
        MP1,
        TWINVQ,
        TRUEHD,
        MP4ALS,
        ATRAC1,
        BINKAUDIO_RDFT,
        BINKAUDIO_DCT,
        AAC_LATM,
        QDMC,
        CELT,
        G723_1,
        G729,
        8SVX_EXP,
        8SVX_FIB,
        BMV_AUDIO,
        RALF,
        IAC,
        ILBC,
        OPUS,
        COMFORT_NOISE,
        TAK,
        METASOUND,
        PAF_AUDIO,
        ON2AVC,
        DSS_SP,
        FFWAVESYNTH,
        SONIC,
        SONIC_LS,
        EVRC,
        SMV,
        DSD_LSBF,
        DSD_MSBF,
        DSD_LSBF_PLANAR,
        DSD_MSBF_PLANAR,
        4GV,
        INTERPLAY_ACM,
        XMA1,
        XMA2,
        DST,
        FIRST_SUBTITLE,
        DVD_SUBTITLE,
        DVB_SUBTITLE,
        TEXT,
        XSUB,
        SSA,
        MOV_TEXT,
        HDMV_PGS_SUBTITLE,
        DVB_TELETEXT,
        SRT,
        MICRODVD,
        EIA_608,
        JACOSUB,
        SAMI,
        REALTEXT,
        STL,
        SUBVIEWER1,
        SUBVIEWER,
        SUBRIP,
        WEBVTT,
        MPL2,
        VPLAYER,
        PJS,
        ASS,
        HDMV_TEXT_SUBTITLE,
        FIRST_UNKNOWN,
        TTF,
        BINTEXT,
        XBIN,
        IDF,
        OTF,
        SMPTE_KLV,
        DVD_NAV,
        TIMED_ID3,
        BIN_DATA,
        PROBE,
        MPEG2TS,
        MPEG4SYSTEMS,
        FFMETADATA,
        WRAPPED_AVFRAME
    }

    [Flags, CCode (cname = "AVDiscard", cprefix = "AVDISCARD_", cheader_filename = "avcodec.h")]
    public enum Discard
    {
        NONE,
        DEFAULT,
        NONREF,
        BIDIR,
        NONINTRA,
        NONKEY,
        ALL
    }

    [Flags, CCode (cname = "int", cprefix = "AV_PKT_FLAG_", cheader_filename = "avcodec.h")]
    public enum PktFlag
    {
        KEY,
        CORRUPT
    }

    [CCode (cname = "AVPacketSideDataType", cprefix = "AV_PKT_DATA_", cheader_filename = "avcodec.h")]
    enum PacketSideDataType
    {
        PALETTE,
        NEW_EXTRADATA,
        PARAM_CHANGE,
        H263_MB_INFO,
        REPLAYGAIN,
        DISPLAYMATRIX,
        STEREO3D,
        AUDIO_SERVICE_TYPE,
        QUALITY_STATS,
        FALLBACK_TRACK,
        CPB_PROPERTIES,
        SKIP_SAMPLES,
        JP_DUALMONO,
        STRINGS_METADATA,
        SUBTITLE_POSITION,
        MATROSKA_BLOCKADDITIONAL,
        WEBVTT_IDENTIFIER,
        WEBVTT_SETTINGS,
        METADATA_UPDATE,
        MPEGTS_STREAM_ID,
        MASTERING_DISPLAY_METADATA
    }

    [SimpleType, CCode (cname = "AVPacketSideData", cheader_filename = "avcodec.h")]
    public struct PacketSideData
    {
        [CCode (array_length_cname = "size")]
        public uint8[] data;
        public PacketSideDataType type;
    }

    [SimpleType, CCode (cname = "AVPacket", cheader_filename = "avcodec.h")]
    public struct Packet
    {
        public int64   pts;
        public int64   dts;
        public uint8*  data;
        public int     size;
        public int     stream_index;
        public PktFlag flags;
        public int64   duration;
        public int64   pos;
    }

    [CCode (cname = "int", cprefix = "FF_PROFILE_", cheader_filename = "avcodec.h")]
    public enum FFProfile
    {
        UNKNOWN,
        RESERVED,
        AAC_MAIN,
        AAC_LOW,
        AAC_SSR,
        AAC_LTP,
        AAC_HE,
        AAC_HE_V2,
        AAC_LD,
        AAC_ELD,
        MPEG2_AAC_LOW,
        MPEG2_AAC_HE,
        DTS,
        DTS_ES,
        DTS_96_24,
        DTS_HD_HRA,
        DTS_HD_MA,
        DTS_EXPRESS,
        MPEG2_422,
        MPEG2_HIGH,
        MPEG2_SS,
        MPEG2_SNR_SCALABLE,
        MPEG2_MAIN,
        MPEG2_SIMPLE,
        H264_CONSTRAINED,
        H264_INTRA,
        H264_BASELINE,
        H264_CONSTRAINED_BASELINE,
        H264_MAIN,
        H264_EXTENDED,
        H264_HIGH,
        H264_HIGH_10,
        H264_HIGH_10_INTRA,
        H264_HIGH_422,
        H264_HIGH_422_INTRA,
        H264_HIGH_444,
        H264_HIGH_444_PREDICTIVE,
        H264_HIGH_444_INTRA,
        H264_CAVLC_444,
        VC1_SIMPLE,
        VC1_MAIN,
        VC1_COMPLEX,
        VC1_ADVANCED,
        MPEG4_SIMPLE,
        MPEG4_SIMPLE_SCALABLE,
        MPEG4_CORE,
        MPEG4_MAIN,
        MPEG4_N_BIT,
        MPEG4_SCALABLE_TEXTURE,
        MPEG4_SIMPLE_FACE_ANIMATION,
        MPEG4_BASIC_ANIMATED_TEXTURE,
        MPEG4_HYBRID,
        MPEG4_ADVANCED_REAL_TIME,
        MPEG4_CORE_SCALABLE,
        MPEG4_ADVANCED_CODING,
        MPEG4_ADVANCED_CORE,
        MPEG4_ADVANCED_SCALABLE_TEXTURE,
        MPEG4_SIMPLE_STUDIO,
        MPEG4_ADVANCED_SIMPLE,
        JPEG2000_CSTREAM_RESTRICTION_0,
        JPEG2000_CSTREAM_RESTRICTION_1,
        JPEG2000_CSTREAM_NO_RESTRICTION,
        JPEG2000_DCINEMA_2K,
        JPEG2000_DCINEMA_4K,
        VP9_0,
        VP9_1,
        VP9_2,
        VP9_3,
        HEVC_MAIN,
        HEVC_MAIN_10,
        HEVC_MAIN_STILL_PICTURE,
        HEVC_REXT
    }

    [SimpleType, CCode (cname = "AVProfile", cheader_filename = "avcodec.h")]
    public struct Profile
    {
        FFProfile profile;
        string name;
    }

    [Flags, CCode (cname = "int", cprefix = "AV_CODEC_CAP_", cheader_filename = "avcodec.h")]
    public enum Cap
    {
        DRAW_HORIZ_BAND,
        DR1,
        TRUNCATED
        DELAY,
        SMALL_LAST_FRAME,
        HWACCEL_VDPAU,
        SUBFRAMES,
        EXPERIMENTAL,
        CHANNEL_CONF,
        FRAME_THREADS,
        SLICE_THREADS,
        PARAM_CHANGE,
        AUTO_THREADS,
        VARIABLE_FRAME_SIZE,
        INTRA_ONLY,
        LOSSLESS
    }

    [Compact, CCode (cname = "AVCodec", cheader_filename = "avcodec.h")]
    public class Codec
    {
        public string name;
        public string long_name;
        public Media.Type type;
        public ID id;
        public Cap capabilities;
        public Util.Rational supported_framerates;
        [CCode (array_length = false)]
        public PixelFormat[] pix_fmts
        [CCode (array_length = false)]
        public int[] supported_samplerates;
        [CCode (array_length = false)]
        public SampleFormat[] sample_fmts;
        [CCode (array_length = false)]
        public uint64[] channel_layouts;
        public uint8 max_lowres;
        [CCode (array_length = false)]
        public Profile[] profiles;
    }
}
